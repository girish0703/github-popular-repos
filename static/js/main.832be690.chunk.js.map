{"version":3,"sources":["components/LanguageFilterItem/index.js","components/RepositoryItem/index.js","components/GithubPopularRepos/index.js","App.js","index.js"],"names":["LanguageFilterItem","props","isSelected","languageFilter","setSelectedLanguageFilterAndGetRepositories","btnClassName","className","onClick","id","type","language","RepositoryItem","repositoryData","src","imageUrl","alt","name","starsCount","forksCount","issuesCount","languageFiltersData","GithubPopularRepos","state","isLoading","repositoriesData","selectedLanguageFilter","setRepositories","fetchedData","loadingStatus","setState","setIsLoading","getRepositories","a","fetch","response","json","updatedData","popular_repos","map","eachRepository","avatar_url","stars_count","forks_count","issues_count","newFilterId","this","eachLanguageFilter","testid","color","height","width","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.832be690.chunk.js","sourcesContent":["// Write your code here\nimport './index.css'\n\nconst LanguageFilterItem = props => {\n  const {\n    isSelected,\n    languageFilter,\n    setSelectedLanguageFilterAndGetRepositories,\n  } = props\n  const btnClassName = isSelected\n    ? 'language-btn selected-language-btn'\n    : 'language-btn'\n  const onClickBtnLanguageFilter = () => {\n    setSelectedLanguageFilterAndGetRepositories(languageFilter.id)\n  }\n  return (\n    <li>\n      <button\n        className={btnClassName}\n        onClick={onClickBtnLanguageFilter}\n        type=\"button\"\n      >\n        {languageFilter.language}\n      </button>\n    </li>\n  )\n}\n\nexport default LanguageFilterItem\n","// Write your code here\nimport './index.css'\n\nconst RepositoryItem = props => {\n  const {repositoryData} = props\n  return (\n    <li className=\"repository-card-item-container\">\n      <img\n        className=\"card-item-image\"\n        src={repositoryData.imageUrl}\n        alt={repositoryData.name}\n      />\n      <h1 className=\"card-item-name\">{repositoryData.name}</h1>\n      <div className=\"stats-container\">\n        <img\n          className=\"stats-icon\"\n          src=\"https://assets.ccbp.in/frontend/react-js/stars-count-img.png\"\n          alt=\"stars\"\n        />\n        <p className=\"stats-text\">{repositoryData.starsCount} stars</p>\n      </div>\n      <div className=\"stats-container\">\n        <img\n          className=\"stats-icon\"\n          src=\"https://assets.ccbp.in/frontend/react-js/forks-count-img.png\"\n          alt=\"forks\"\n        />\n        <p className=\"stats-text\">{repositoryData.forksCount} forks</p>\n      </div>\n      <div className=\"stats-container\">\n        <img\n          className=\"stats-icon\"\n          src=\"https://assets.ccbp.in/frontend/react-js/issues-count-img.png\"\n          alt=\"open-issues\"\n        />\n        <p className=\"stats-text\">{repositoryData.issuesCount} open issues</p>\n      </div>\n    </li>\n  )\n}\nexport default RepositoryItem\n","import {Component} from 'react'\nimport Loader from 'react-loader-spinner'\n\nimport LanguageFilterItem from '../LanguageFilterItem'\nimport RepositoryItem from '../RepositoryItem'\nimport './index.css'\n\nconst languageFiltersData = [\n  {id: 'ALL', language: 'All'},\n  {id: 'JAVASCRIPT', language: 'Javascript'},\n  {id: 'RUBY', language: 'Ruby'},\n  {id: 'JAVA', language: 'Java'},\n  {id: 'CSS', language: 'CSS'},\n]\n\n// Write your code here\nclass GithubPopularRepos extends Component {\n  state = {isLoading: true, repositoriesData: [], selectedLanguageFilter: 'ALL'}\n\n  componentDidMount() {\n    this.getRepositories(languageFiltersData[0].id)\n  }\n\n  setRepositories = (fetchedData, loadingStatus) => {\n    this.setState({\n      repositoriesData: fetchedData,\n      isLoading: loadingStatus,\n    })\n  }\n\n  setIsLoading = loadingStatus => {\n    this.setState({isLoading: loadingStatus})\n  }\n\n  getRepositories = async selectedLanguageFilter => {\n    this.setIsLoading(true)\n    const response = await fetch(\n      `https://apis.ccbp.in/popular-repos?language=${selectedLanguageFilter}`,\n    )\n    const fetchedData = await response.json()\n    const updatedData = fetchedData.popular_repos.map(eachRepository => ({\n      id: eachRepository.id,\n      imageUrl: eachRepository.avatar_url,\n      name: eachRepository.name,\n      starsCount: eachRepository.stars_count,\n      forksCount: eachRepository.forks_count,\n      issuesCount: eachRepository.issues_count,\n    }))\n    this.setRepositories(updatedData, false)\n  }\n\n  setSelectedLanguageFilterAndGetRepositories = newFilterId => {\n    this.setState({selectedLanguageFilter: newFilterId})\n    this.getRepositories(newFilterId)\n  }\n\n  render() {\n    const {selectedLanguageFilter, isLoading, repositoriesData} = this.state\n    return (\n      <div className=\"app-container\">\n        <div className=\"content-container\">\n          <h1 className=\"heading\">Popular</h1>\n          <ul className=\"filters-list-container\">\n            {languageFiltersData.map(eachLanguageFilter => (\n              <LanguageFilterItem\n                isSelected={eachLanguageFilter.id === selectedLanguageFilter}\n                key={eachLanguageFilter.id}\n                languageFilter={eachLanguageFilter}\n                setSelectedLanguageFilterAndGetRepositories={\n                  this.setSelectedLanguageFilterAndGetRepositories\n                }\n              />\n            ))}\n          </ul>\n          {isLoading ? (\n            <div testid=\"loader\">\n              <Loader color=\"#0284c7\" height={80} type=\"ThreeDots\" width={80} />\n            </div>\n          ) : (\n            <ul className=\"repositories-cards-list-container\">\n              {repositoriesData.map(repositoryData => (\n                <RepositoryItem\n                  key={repositoryData.id}\n                  repositoryData={repositoryData}\n                />\n              ))}\n            </ul>\n          )}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default GithubPopularRepos\n","import './App.css'\n\nimport GithubPopularRepos from './components/GithubPopularRepos'\n\nconst App = () => <GithubPopularRepos />\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}